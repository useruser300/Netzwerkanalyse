name: Build Executables

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # Ubuntu 20.04 für Stabilität

    steps:
      - name: 📥 Check out Repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python 3.11.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.11"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; else echo "requirements.txt nicht gefunden, überspringe diesen Schritt"; fi
          pip install pyinstaller

      - name: 🔍 Debugging: Prüfe start.py
        run: ls -l start.py || echo "start.py nicht gefunden!"

      - name: 🔍 Debugging: Prüfe PyInstaller
        run: |
          python --version
          pip show pyinstaller || echo "PyInstaller nicht installiert!"

      - name: 🏗️ Build Executable
        run: |
          pyinstaller --onefile --windowed --name netzwerkanalyse-${{ runner.os }} start.py

      - name: 🔍 Debugging: Zeige Inhalt von dist/
        run: ls -l dist/ || echo "Kein Output gefunden in dist/"

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v3  # @v3 statt @v2 nutzen
        with:
          name: binary-${{ runner.os }}
          path: dist/*

      - name: 🚀 Release Build
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: latest
          release_name: "Neueste Version"
          body: "Hier sind die neuesten Builds für Windows, macOS und Linux."
          draft: false
          prerelease: false
